"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmy_webpack_project"] = self["webpackChunkmy_webpack_project"] || []).push([["lib_nami-wallet_temporary_modules_emurgo_cardano-message-signing-browser_emurgo_message_signing_js"],{

/***/ "./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing.js":
/*!*************************************************************************************************************!*\
  !*** ./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing.js ***!
  \*************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AlgorithmId\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.AlgorithmId),\n/* harmony export */   \"BigNum\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.BigNum),\n/* harmony export */   \"CBORArray\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORArray),\n/* harmony export */   \"CBORObject\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORObject),\n/* harmony export */   \"CBORSpecial\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORSpecial),\n/* harmony export */   \"CBORSpecialType\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORSpecialType),\n/* harmony export */   \"CBORValue\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORValue),\n/* harmony export */   \"CBORValueKind\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CBORValueKind),\n/* harmony export */   \"COSEEncrypt\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSEEncrypt),\n/* harmony export */   \"COSEEncrypt0\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSEEncrypt0),\n/* harmony export */   \"COSEKey\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSEKey),\n/* harmony export */   \"COSERecipient\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSERecipient),\n/* harmony export */   \"COSERecipients\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSERecipients),\n/* harmony export */   \"COSESign\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESign),\n/* harmony export */   \"COSESign1\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESign1),\n/* harmony export */   \"COSESign1Builder\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESign1Builder),\n/* harmony export */   \"COSESignBuilder\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESignBuilder),\n/* harmony export */   \"COSESignature\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESignature),\n/* harmony export */   \"COSESignatures\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.COSESignatures),\n/* harmony export */   \"CounterSignature\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CounterSignature),\n/* harmony export */   \"CurveType\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.CurveType),\n/* harmony export */   \"ECKey\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.ECKey),\n/* harmony export */   \"EdDSA25519Key\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.EdDSA25519Key),\n/* harmony export */   \"HeaderMap\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.HeaderMap),\n/* harmony export */   \"Headers\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.Headers),\n/* harmony export */   \"Int\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.Int),\n/* harmony export */   \"KeyOperation\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.KeyOperation),\n/* harmony export */   \"KeyType\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.KeyType),\n/* harmony export */   \"Label\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.Label),\n/* harmony export */   \"LabelKind\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.LabelKind),\n/* harmony export */   \"Labels\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.Labels),\n/* harmony export */   \"PasswordEncryption\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.PasswordEncryption),\n/* harmony export */   \"ProtectedHeaderMap\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.ProtectedHeaderMap),\n/* harmony export */   \"PubKeyEncryption\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.PubKeyEncryption),\n/* harmony export */   \"SigContext\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.SigContext),\n/* harmony export */   \"SigStructure\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.SigStructure),\n/* harmony export */   \"SignedMessage\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.SignedMessage),\n/* harmony export */   \"SignedMessageKind\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.SignedMessageKind),\n/* harmony export */   \"TaggedCBOR\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.TaggedCBOR),\n/* harmony export */   \"__wbindgen_debug_string\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_debug_string),\n/* harmony export */   \"__wbindgen_object_drop_ref\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_object_drop_ref),\n/* harmony export */   \"__wbindgen_rethrow\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_rethrow),\n/* harmony export */   \"__wbindgen_string_new\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_new),\n/* harmony export */   \"__wbindgen_throw\": () => (/* reexport safe */ _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emurgo_message_signing_bg.js */ \"./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__]);\n_emurgo_message_signing_bg_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://my-webpack-project/./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing.js?");

/***/ }),

/***/ "./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.js":
/*!****************************************************************************************************************!*\
  !*** ./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.js ***!
  \****************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AlgorithmId\": () => (/* binding */ AlgorithmId),\n/* harmony export */   \"BigNum\": () => (/* binding */ BigNum),\n/* harmony export */   \"CBORArray\": () => (/* binding */ CBORArray),\n/* harmony export */   \"CBORObject\": () => (/* binding */ CBORObject),\n/* harmony export */   \"CBORSpecial\": () => (/* binding */ CBORSpecial),\n/* harmony export */   \"CBORSpecialType\": () => (/* binding */ CBORSpecialType),\n/* harmony export */   \"CBORValue\": () => (/* binding */ CBORValue),\n/* harmony export */   \"CBORValueKind\": () => (/* binding */ CBORValueKind),\n/* harmony export */   \"COSEEncrypt\": () => (/* binding */ COSEEncrypt),\n/* harmony export */   \"COSEEncrypt0\": () => (/* binding */ COSEEncrypt0),\n/* harmony export */   \"COSEKey\": () => (/* binding */ COSEKey),\n/* harmony export */   \"COSERecipient\": () => (/* binding */ COSERecipient),\n/* harmony export */   \"COSERecipients\": () => (/* binding */ COSERecipients),\n/* harmony export */   \"COSESign\": () => (/* binding */ COSESign),\n/* harmony export */   \"COSESign1\": () => (/* binding */ COSESign1),\n/* harmony export */   \"COSESign1Builder\": () => (/* binding */ COSESign1Builder),\n/* harmony export */   \"COSESignBuilder\": () => (/* binding */ COSESignBuilder),\n/* harmony export */   \"COSESignature\": () => (/* binding */ COSESignature),\n/* harmony export */   \"COSESignatures\": () => (/* binding */ COSESignatures),\n/* harmony export */   \"CounterSignature\": () => (/* binding */ CounterSignature),\n/* harmony export */   \"CurveType\": () => (/* binding */ CurveType),\n/* harmony export */   \"ECKey\": () => (/* binding */ ECKey),\n/* harmony export */   \"EdDSA25519Key\": () => (/* binding */ EdDSA25519Key),\n/* harmony export */   \"HeaderMap\": () => (/* binding */ HeaderMap),\n/* harmony export */   \"Headers\": () => (/* binding */ Headers),\n/* harmony export */   \"Int\": () => (/* binding */ Int),\n/* harmony export */   \"KeyOperation\": () => (/* binding */ KeyOperation),\n/* harmony export */   \"KeyType\": () => (/* binding */ KeyType),\n/* harmony export */   \"Label\": () => (/* binding */ Label),\n/* harmony export */   \"LabelKind\": () => (/* binding */ LabelKind),\n/* harmony export */   \"Labels\": () => (/* binding */ Labels),\n/* harmony export */   \"PasswordEncryption\": () => (/* binding */ PasswordEncryption),\n/* harmony export */   \"ProtectedHeaderMap\": () => (/* binding */ ProtectedHeaderMap),\n/* harmony export */   \"PubKeyEncryption\": () => (/* binding */ PubKeyEncryption),\n/* harmony export */   \"SigContext\": () => (/* binding */ SigContext),\n/* harmony export */   \"SigStructure\": () => (/* binding */ SigStructure),\n/* harmony export */   \"SignedMessage\": () => (/* binding */ SignedMessage),\n/* harmony export */   \"SignedMessageKind\": () => (/* binding */ SignedMessageKind),\n/* harmony export */   \"TaggedCBOR\": () => (/* binding */ TaggedCBOR),\n/* harmony export */   \"__wbindgen_debug_string\": () => (/* binding */ __wbindgen_debug_string),\n/* harmony export */   \"__wbindgen_object_drop_ref\": () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   \"__wbindgen_rethrow\": () => (/* binding */ __wbindgen_rethrow),\n/* harmony export */   \"__wbindgen_string_new\": () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emurgo_message_signing_bg.wasm */ \"./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.wasm\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__]);\n_emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(_emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction debugString(val) {\n  // primitive types\n  const type = typeof val;\n\n  if (type == 'number' || type == 'boolean' || val == null) {\n    return `${val}`;\n  }\n\n  if (type == 'string') {\n    return `\"${val}\"`;\n  }\n\n  if (type == 'symbol') {\n    const description = val.description;\n\n    if (description == null) {\n      return 'Symbol';\n    } else {\n      return `Symbol(${description})`;\n    }\n  }\n\n  if (type == 'function') {\n    const name = val.name;\n\n    if (typeof name == 'string' && name.length > 0) {\n      return `Function(${name})`;\n    } else {\n      return 'Function';\n    }\n  } // objects\n\n\n  if (Array.isArray(val)) {\n    const length = val.length;\n    let debug = '[';\n\n    if (length > 0) {\n      debug += debugString(val[0]);\n    }\n\n    for (let i = 1; i < length; i++) {\n      debug += ', ' + debugString(val[i]);\n    }\n\n    debug += ']';\n    return debug;\n  } // Test for built-in\n\n\n  const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n  let className;\n\n  if (builtInMatches.length > 1) {\n    className = builtInMatches[1];\n  } else {\n    // Failed to match the standard '[object ClassName]'\n    return toString.call(val);\n  }\n\n  if (className == 'Object') {\n    // we're a user defined class or Object\n    // JSON.stringify avoids problems with cycles, and is generally much\n    // easier than looping through ownProperties of `val`.\n    try {\n      return 'Object(' + JSON.stringify(val) + ')';\n    } catch (_) {\n      return 'Object';\n    }\n  } // errors\n\n\n  if (val instanceof Error) {\n    return `${val.name}: ${val.message}\\n${val.stack}`;\n  } // TODO we could test for more things here, like `Set`s and `Map`s.\n\n\n  return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nlet cachedTextEncoder = new lTextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(_emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1);\n  getUint8Memory0().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(`expected instance of ${klass.name}`);\n  }\n\n  return instance.ptr;\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nlet cachegetFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n  if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n    cachegetFloat64Memory0 = new Float64Array(_emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n  }\n\n  return cachegetFloat64Memory0;\n}\n/**\n*/\n\n\nconst LabelKind = Object.freeze({\n  Int: 0,\n  \"0\": \"Int\",\n  Text: 1,\n  \"1\": \"Text\"\n});\n/**\n*/\n\nconst SignedMessageKind = Object.freeze({\n  COSESIGN: 0,\n  \"0\": \"COSESIGN\",\n  COSESIGN1: 1,\n  \"1\": \"COSESIGN1\"\n});\n/**\n*/\n\nconst SigContext = Object.freeze({\n  Signature: 0,\n  \"0\": \"Signature\",\n  Signature1: 1,\n  \"1\": \"Signature1\",\n  CounterSignature: 2,\n  \"2\": \"CounterSignature\"\n});\n/**\n*/\n\nconst CBORSpecialType = Object.freeze({\n  Bool: 0,\n  \"0\": \"Bool\",\n  Float: 1,\n  \"1\": \"Float\",\n  Unassigned: 2,\n  \"2\": \"Unassigned\",\n  Break: 3,\n  \"3\": \"Break\",\n  Undefined: 4,\n  \"4\": \"Undefined\",\n  Null: 5,\n  \"5\": \"Null\"\n});\n/**\n*/\n\nconst CBORValueKind = Object.freeze({\n  Int: 0,\n  \"0\": \"Int\",\n  Bytes: 1,\n  \"1\": \"Bytes\",\n  Text: 2,\n  \"2\": \"Text\",\n  Array: 3,\n  \"3\": \"Array\",\n  Object: 4,\n  \"4\": \"Object\",\n  TaggedCBOR: 5,\n  \"5\": \"TaggedCBOR\",\n  Special: 6,\n  \"6\": \"Special\"\n});\n/**\n*/\n\nconst AlgorithmId = Object.freeze({\n  /**\n  *r\" EdDSA (Pure EdDSA, not HashedEdDSA) - the algorithm used for Cardano addresses\n  */\n  EdDSA: 0,\n  \"0\": \"EdDSA\",\n\n  /**\n  *r\" ChaCha20/Poly1305 w/ 256-bit key, 128-bit tag\n  */\n  ChaCha20Poly1305: 1,\n  \"1\": \"ChaCha20Poly1305\"\n});\n/**\n*/\n\nconst KeyType = Object.freeze({\n  /**\n  *r\" octet key pair\n  */\n  OKP: 0,\n  \"0\": \"OKP\",\n\n  /**\n  *r\" 2-coord EC\n  */\n  EC2: 1,\n  \"1\": \"EC2\",\n  Symmetric: 2,\n  \"2\": \"Symmetric\"\n});\n/**\n*/\n\nconst ECKey = Object.freeze({\n  CRV: 0,\n  \"0\": \"CRV\",\n  X: 1,\n  \"1\": \"X\",\n  Y: 2,\n  \"2\": \"Y\",\n  D: 3,\n  \"3\": \"D\"\n});\n/**\n*/\n\nconst CurveType = Object.freeze({\n  P256: 0,\n  \"0\": \"P256\",\n  P384: 1,\n  \"1\": \"P384\",\n  P521: 2,\n  \"2\": \"P521\",\n  X25519: 3,\n  \"3\": \"X25519\",\n  X448: 4,\n  \"4\": \"X448\",\n  Ed25519: 5,\n  \"5\": \"Ed25519\",\n  Ed448: 6,\n  \"6\": \"Ed448\"\n});\n/**\n*/\n\nconst KeyOperation = Object.freeze({\n  Sign: 0,\n  \"0\": \"Sign\",\n  Verify: 1,\n  \"1\": \"Verify\",\n  Encrypt: 2,\n  \"2\": \"Encrypt\",\n  Decrypt: 3,\n  \"3\": \"Decrypt\",\n  WrapKey: 4,\n  \"4\": \"WrapKey\",\n  UnwrapKey: 5,\n  \"5\": \"UnwrapKey\",\n  DeriveKey: 6,\n  \"6\": \"DeriveKey\",\n  DeriveBits: 7,\n  \"7\": \"DeriveBits\"\n});\n/**\n*/\n\nclass BigNum {\n  static __wrap(ptr) {\n    const obj = Object.create(BigNum.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_bignum_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {BigNum}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_from_bytes(ptr0, len0);\n    return BigNum.__wrap(ret);\n  }\n  /**\n  * @param {string} string\n  * @returns {BigNum}\n  */\n\n\n  static from_str(string) {\n    var ptr0 = passStringToWasm0(string, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_from_str(ptr0, len0);\n    return BigNum.__wrap(ret);\n  }\n  /**\n  * @returns {string}\n  */\n\n\n  to_str() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_to_str(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n    }\n  }\n  /**\n  * @param {BigNum} other\n  * @returns {BigNum}\n  */\n\n\n  checked_mul(other) {\n    _assertClass(other, BigNum);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_checked_mul(this.ptr, other.ptr);\n    return BigNum.__wrap(ret);\n  }\n  /**\n  * @param {BigNum} other\n  * @returns {BigNum}\n  */\n\n\n  checked_add(other) {\n    _assertClass(other, BigNum);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_checked_add(this.ptr, other.ptr);\n    return BigNum.__wrap(ret);\n  }\n  /**\n  * @param {BigNum} other\n  * @returns {BigNum}\n  */\n\n\n  checked_sub(other) {\n    _assertClass(other, BigNum);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.bignum_checked_sub(this.ptr, other.ptr);\n    return BigNum.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass CBORArray {\n  static __wrap(ptr) {\n    const obj = Object.create(CBORArray.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cborarray_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CBORArray}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_from_bytes(ptr0, len0);\n    return CBORArray.__wrap(ret);\n  }\n  /**\n  * @returns {CBORArray}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_new();\n    return CBORArray.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  len() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_len(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} index\n  * @returns {CBORValue}\n  */\n\n\n  get(index) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_get(this.ptr, index);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {CBORValue} elem\n  */\n\n\n  add(elem) {\n    _assertClass(elem, CBORValue);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_add(this.ptr, elem.ptr);\n  }\n  /**\n  * @param {boolean} use_definite\n  */\n\n\n  set_definite_encoding(use_definite) {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_set_definite_encoding(this.ptr, use_definite);\n  }\n  /**\n  * @returns {boolean}\n  */\n\n\n  is_definite() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborarray_is_definite(this.ptr);\n    return ret !== 0;\n  }\n\n}\n/**\n*/\n\nclass CBORObject {\n  static __wrap(ptr) {\n    const obj = Object.create(CBORObject.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cborobject_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CBORObject}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_from_bytes(ptr0, len0);\n    return CBORObject.__wrap(ret);\n  }\n  /**\n  * @returns {CBORObject}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_new();\n    return CBORObject.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  len() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_len(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {CBORValue} key\n  * @param {CBORValue} value\n  * @returns {CBORValue | undefined}\n  */\n\n\n  insert(key, value) {\n    _assertClass(key, CBORValue);\n\n    _assertClass(value, CBORValue);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_insert(this.ptr, key.ptr, value.ptr);\n    return ret === 0 ? undefined : CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {CBORValue} key\n  * @returns {CBORValue | undefined}\n  */\n\n\n  get(key) {\n    _assertClass(key, CBORValue);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_get(this.ptr, key.ptr);\n    return ret === 0 ? undefined : CBORValue.__wrap(ret);\n  }\n  /**\n  * @returns {CBORArray}\n  */\n\n\n  keys() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_keys(this.ptr);\n    return CBORArray.__wrap(ret);\n  }\n  /**\n  * @param {boolean} use_definite\n  */\n\n\n  set_definite_encoding(use_definite) {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_set_definite_encoding(this.ptr, use_definite);\n  }\n  /**\n  * @returns {boolean}\n  */\n\n\n  is_definite() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborobject_is_definite(this.ptr);\n    return ret !== 0;\n  }\n\n}\n/**\n*/\n\nclass CBORSpecial {\n  static __wrap(ptr) {\n    const obj = Object.create(CBORSpecial.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cborspecial_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CBORSpecial}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_from_bytes(ptr0, len0);\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @param {boolean} b\n  * @returns {CBORSpecial}\n  */\n\n\n  static new_bool(b) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_new_bool(b);\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @param {number} u\n  * @returns {CBORSpecial}\n  */\n\n\n  static new_unassigned(u) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_new_unassigned(u);\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @returns {CBORSpecial}\n  */\n\n\n  static new_break() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_new_break();\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @returns {CBORSpecial}\n  */\n\n\n  static new_null() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_new_null();\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @returns {CBORSpecial}\n  */\n\n\n  static new_undefined() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_new_undefined();\n    return CBORSpecial.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  kind() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_kind(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {boolean | undefined}\n  */\n\n\n  as_bool() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_as_bool(this.ptr);\n    return ret === 0xFFFFFF ? undefined : ret !== 0;\n  }\n  /**\n  * @returns {number | undefined}\n  */\n\n\n  as_float() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_as_float(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat64Memory0()[retptr / 8 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {number | undefined}\n  */\n\n\n  as_unassigned() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborspecial_as_unassigned(this.ptr);\n    return ret === 0xFFFFFF ? undefined : ret;\n  }\n\n}\n/**\n*/\n\nclass CBORValue {\n  static __wrap(ptr) {\n    const obj = Object.create(CBORValue.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cborvalue_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CBORValue}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_from_bytes(ptr0, len0);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {Int} int\n  * @returns {CBORValue}\n  */\n\n\n  static new_int(int) {\n    _assertClass(int, Int);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_int(int.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CBORValue}\n  */\n\n\n  static new_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_bytes(ptr0, len0);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {string} text\n  * @returns {CBORValue}\n  */\n\n\n  static new_text(text) {\n    var ptr0 = passStringToWasm0(text, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_text(ptr0, len0);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {CBORArray} arr\n  * @returns {CBORValue}\n  */\n\n\n  static new_array(arr) {\n    _assertClass(arr, CBORArray);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_array(arr.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {CBORObject} obj\n  * @returns {CBORValue}\n  */\n\n\n  static new_object(obj) {\n    _assertClass(obj, CBORObject);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_object(obj.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {TaggedCBOR} tagged\n  * @returns {CBORValue}\n  */\n\n\n  static new_tagged(tagged) {\n    _assertClass(tagged, TaggedCBOR);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_tagged(tagged.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {CBORSpecial} special\n  * @returns {CBORValue}\n  */\n\n\n  static new_special(special) {\n    _assertClass(special, CBORSpecial);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_new_special(special.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  kind() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_kind(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {Int | undefined}\n  */\n\n\n  as_int() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_int(this.ptr);\n    return ret === 0 ? undefined : Int.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  as_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {string | undefined}\n  */\n\n\n  as_text() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_text(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getStringFromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {CBORArray | undefined}\n  */\n\n\n  as_array() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_array(this.ptr);\n    return ret === 0 ? undefined : CBORArray.__wrap(ret);\n  }\n  /**\n  * @returns {CBORObject | undefined}\n  */\n\n\n  as_object() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_object(this.ptr);\n    return ret === 0 ? undefined : CBORObject.__wrap(ret);\n  }\n  /**\n  * @returns {TaggedCBOR | undefined}\n  */\n\n\n  as_tagged() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_tagged(this.ptr);\n    return ret === 0 ? undefined : TaggedCBOR.__wrap(ret);\n  }\n  /**\n  * @returns {CBORSpecial | undefined}\n  */\n\n\n  as_special() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cborvalue_as_special(this.ptr);\n    return ret === 0 ? undefined : CBORSpecial.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSEEncrypt {\n  static __wrap(ptr) {\n    const obj = Object.create(COSEEncrypt.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_coseencrypt_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSEEncrypt}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt_from_bytes(ptr0, len0);\n    return COSEEncrypt.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  ciphertext() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_ciphertext(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {COSERecipients}\n  */\n\n\n  recipients() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt_recipients(this.ptr);\n    return COSERecipients.__wrap(ret);\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array | undefined} ciphertext\n  * @param {COSERecipients} recipients\n  * @returns {COSEEncrypt}\n  */\n\n\n  static new(headers, ciphertext, recipients) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n\n    _assertClass(recipients, COSERecipients);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt_new(headers.ptr, ptr0, len0, recipients.ptr);\n    return COSEEncrypt.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSEEncrypt0 {\n  static __wrap(ptr) {\n    const obj = Object.create(COSEEncrypt0.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_coseencrypt0_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSEEncrypt0}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_from_bytes(ptr0, len0);\n    return COSEEncrypt0.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  ciphertext() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_ciphertext(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array | undefined} ciphertext\n  * @returns {COSEEncrypt0}\n  */\n\n\n  static new(headers, ciphertext) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_new(headers.ptr, ptr0, len0);\n    return COSEEncrypt0.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSEKey {\n  static __wrap(ptr) {\n    const obj = Object.create(COSEKey.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosekey_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSEKey}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_from_bytes(ptr0, len0);\n    return COSEKey.__wrap(ret);\n  }\n  /**\n  * @param {Label} key_type\n  */\n\n\n  set_key_type(key_type) {\n    _assertClass(key_type, Label);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_key_type(this.ptr, key_type.ptr);\n  }\n  /**\n  * @returns {Label}\n  */\n\n\n  key_type() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_key_type(this.ptr);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} key_id\n  */\n\n\n  set_key_id(key_id) {\n    var ptr0 = passArray8ToWasm0(key_id, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_key_id(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  key_id() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_key_id(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Label} algorithm_id\n  */\n\n\n  set_algorithm_id(algorithm_id) {\n    _assertClass(algorithm_id, Label);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_algorithm_id(this.ptr, algorithm_id.ptr);\n  }\n  /**\n  * @returns {Label | undefined}\n  */\n\n\n  algorithm_id() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_algorithm_id(this.ptr);\n    return ret === 0 ? undefined : Label.__wrap(ret);\n  }\n  /**\n  * @param {Labels} key_ops\n  */\n\n\n  set_key_ops(key_ops) {\n    _assertClass(key_ops, Labels);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_key_ops(this.ptr, key_ops.ptr);\n  }\n  /**\n  * @returns {Labels | undefined}\n  */\n\n\n  key_ops() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_key_ops(this.ptr);\n    return ret === 0 ? undefined : Labels.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} base_init_vector\n  */\n\n\n  set_base_init_vector(base_init_vector) {\n    var ptr0 = passArray8ToWasm0(base_init_vector, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_base_init_vector(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  base_init_vector() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_base_init_vector(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Label} label\n  * @returns {CBORValue | undefined}\n  */\n\n\n  header(label) {\n    _assertClass(label, Label);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_header(this.ptr, label.ptr);\n    return ret === 0 ? undefined : CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {Label} label\n  * @param {CBORValue} value\n  */\n\n\n  set_header(label, value) {\n    _assertClass(label, Label);\n\n    _assertClass(value, CBORValue);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_header(this.ptr, label.ptr, value.ptr);\n  }\n  /**\n  * @param {Label} key_type\n  * @returns {COSEKey}\n  */\n\n\n  static new(key_type) {\n    _assertClass(key_type, Label);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_new(key_type.ptr);\n    return COSEKey.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSERecipient {\n  static __wrap(ptr) {\n    const obj = Object.create(COSERecipient.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_coserecipient_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipient_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSERecipient}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipient_from_bytes(ptr0, len0);\n    return COSERecipient.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  ciphertext() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_ciphertext(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array | undefined} ciphertext\n  * @returns {COSERecipient}\n  */\n\n\n  static new(headers, ciphertext) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = isLikeNone(ciphertext) ? 0 : passArray8ToWasm0(ciphertext, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_new(headers.ptr, ptr0, len0);\n    return COSERecipient.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSERecipients {\n  static __wrap(ptr) {\n    const obj = Object.create(COSERecipients.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_coserecipients_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSERecipients}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_from_bytes(ptr0, len0);\n    return COSERecipients.__wrap(ret);\n  }\n  /**\n  * @returns {COSERecipients}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_new();\n    return COSERecipients.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  len() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_len(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} index\n  * @returns {COSERecipient}\n  */\n\n\n  get(index) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_get(this.ptr, index);\n    return COSERecipient.__wrap(ret);\n  }\n  /**\n  * @param {COSERecipient} elem\n  */\n\n\n  add(elem) {\n    _assertClass(elem, COSERecipient);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_add(this.ptr, elem.ptr);\n  }\n\n}\n/**\n*/\n\nclass COSESign {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESign.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesign_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSESign}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign_from_bytes(ptr0, len0);\n    return COSESign.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  payload() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_ciphertext(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {COSESignatures}\n  */\n\n\n  signatures() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign_signatures(this.ptr);\n    return COSESignatures.__wrap(ret);\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array | undefined} payload\n  * @param {COSESignatures} signatures\n  * @returns {COSESign}\n  */\n\n\n  static new(headers, payload, signatures) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = isLikeNone(payload) ? 0 : passArray8ToWasm0(payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n\n    _assertClass(signatures, COSESignatures);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign_new(headers.ptr, ptr0, len0, signatures.ptr);\n    return COSESign.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSESign1 {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESign1.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesign1_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSESign1}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1_from_bytes(ptr0, len0);\n    return COSESign1.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  payload() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_ciphertext(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  signature() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1_signature(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * For verifying, we will want to reverse-construct this SigStructure to check the signature against\n  * # Arguments\n  * * `external_aad` - External application data - see RFC 8152 section 4.3. Set to None if not using this.\n  * @param {Uint8Array | undefined} external_aad\n  * @param {Uint8Array | undefined} external_payload\n  * @returns {SigStructure}\n  */\n\n\n  signed_data(external_aad, external_payload) {\n    var ptr0 = isLikeNone(external_aad) ? 0 : passArray8ToWasm0(external_aad, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(external_payload) ? 0 : passArray8ToWasm0(external_payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1_signed_data(this.ptr, ptr0, len0, ptr1, len1);\n    return SigStructure.__wrap(ret);\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array | undefined} payload\n  * @param {Uint8Array} signature\n  * @returns {COSESign1}\n  */\n\n\n  static new(headers, payload, signature) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = isLikeNone(payload) ? 0 : passArray8ToWasm0(payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(signature, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1_new(headers.ptr, ptr0, len0, ptr1, len1);\n    return COSESign1.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSESign1Builder {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESign1Builder.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesign1builder_free(ptr);\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array} payload\n  * @param {boolean} is_payload_external\n  * @returns {COSESign1Builder}\n  */\n\n\n  static new(headers, payload, is_payload_external) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = passArray8ToWasm0(payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_new(headers.ptr, ptr0, len0, is_payload_external);\n    return COSESign1Builder.__wrap(ret);\n  }\n  /**\n  */\n\n\n  hash_payload() {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_hash_payload(this.ptr);\n  }\n  /**\n  * @param {Uint8Array} external_aad\n  */\n\n\n  set_external_aad(external_aad) {\n    var ptr0 = passArray8ToWasm0(external_aad, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_set_external_aad(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {SigStructure}\n  */\n\n\n  make_data_to_sign() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_make_data_to_sign(this.ptr);\n    return SigStructure.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} signed_sig_structure\n  * @returns {COSESign1}\n  */\n\n\n  build(signed_sig_structure) {\n    var ptr0 = passArray8ToWasm0(signed_sig_structure, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_build(this.ptr, ptr0, len0);\n    return COSESign1.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSESignBuilder {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESignBuilder.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesignbuilder_free(ptr);\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array} payload\n  * @param {boolean} is_payload_external\n  * @returns {COSESignBuilder}\n  */\n\n\n  static new(headers, payload, is_payload_external) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = passArray8ToWasm0(payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignbuilder_new(headers.ptr, ptr0, len0, is_payload_external);\n    return COSESignBuilder.__wrap(ret);\n  }\n  /**\n  */\n\n\n  hash_payload() {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_hash_payload(this.ptr);\n  }\n  /**\n  * @param {Uint8Array} external_aad\n  */\n\n\n  set_external_aad(external_aad) {\n    var ptr0 = passArray8ToWasm0(external_aad, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesign1builder_set_external_aad(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {SigStructure}\n  */\n\n\n  make_data_to_sign() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignbuilder_make_data_to_sign(this.ptr);\n    return SigStructure.__wrap(ret);\n  }\n  /**\n  * @param {COSESignatures} signed_sig_structure\n  * @returns {COSESign}\n  */\n\n\n  build(signed_sig_structure) {\n    _assertClass(signed_sig_structure, COSESignatures);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignbuilder_build(this.ptr, signed_sig_structure.ptr);\n    return COSESign.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSESignature {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESignature.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesignature_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignature_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSESignature}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignature_from_bytes(ptr0, len0);\n    return COSESignature.__wrap(ret);\n  }\n  /**\n  * @returns {Headers}\n  */\n\n\n  headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coseencrypt0_headers(this.ptr);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  signature() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignature_signature(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Headers} headers\n  * @param {Uint8Array} signature\n  * @returns {COSESignature}\n  */\n\n\n  static new(headers, signature) {\n    _assertClass(headers, Headers);\n\n    var ptr0 = passArray8ToWasm0(signature, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignature_new(headers.ptr, ptr0, len0);\n    return COSESignature.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass COSESignatures {\n  static __wrap(ptr) {\n    const obj = Object.create(COSESignatures.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_cosesignatures_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignatures_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {COSESignatures}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignatures_from_bytes(ptr0, len0);\n    return COSESignatures.__wrap(ret);\n  }\n  /**\n  * @returns {COSESignatures}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_new();\n    return COSESignatures.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  len() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_len(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} index\n  * @returns {COSESignature}\n  */\n\n\n  get(index) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignatures_get(this.ptr, index);\n    return COSESignature.__wrap(ret);\n  }\n  /**\n  * @param {COSESignature} elem\n  */\n\n\n  add(elem) {\n    _assertClass(elem, COSESignature);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosesignatures_add(this.ptr, elem.ptr);\n  }\n\n}\n/**\n*/\n\nclass CounterSignature {\n  static __wrap(ptr) {\n    const obj = Object.create(CounterSignature.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_countersignature_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.countersignature_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {CounterSignature}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.countersignature_from_bytes(ptr0, len0);\n    return CounterSignature.__wrap(ret);\n  }\n  /**\n  * @param {COSESignature} cose_signature\n  * @returns {CounterSignature}\n  */\n\n\n  static new_single(cose_signature) {\n    _assertClass(cose_signature, COSESignature);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.countersignature_new_single(cose_signature.ptr);\n    return CounterSignature.__wrap(ret);\n  }\n  /**\n  * @param {COSESignatures} cose_signatures\n  * @returns {CounterSignature}\n  */\n\n\n  static new_multi(cose_signatures) {\n    _assertClass(cose_signatures, COSESignatures);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.countersignature_new_multi(cose_signatures.ptr);\n    return CounterSignature.__wrap(ret);\n  }\n  /**\n  * @returns {COSESignatures}\n  */\n\n\n  signatures() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.countersignature_signatures(this.ptr);\n    return COSESignatures.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass EdDSA25519Key {\n  static __wrap(ptr) {\n    const obj = Object.create(EdDSA25519Key.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_eddsa25519key_free(ptr);\n  }\n  /**\n  * @param {Uint8Array} pubkey_bytes\n  * @returns {EdDSA25519Key}\n  */\n\n\n  static new(pubkey_bytes) {\n    var ptr0 = passArray8ToWasm0(pubkey_bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.eddsa25519key_new(ptr0, len0);\n    return EdDSA25519Key.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} private_key_bytes\n  */\n\n\n  set_private_key(private_key_bytes) {\n    var ptr0 = passArray8ToWasm0(private_key_bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.eddsa25519key_set_private_key(this.ptr, ptr0, len0);\n  }\n  /**\n  */\n\n\n  is_for_signing() {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.eddsa25519key_is_for_signing(this.ptr);\n  }\n  /**\n  */\n\n\n  is_for_verifying() {\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.eddsa25519key_is_for_verifying(this.ptr);\n  }\n  /**\n  * @returns {COSEKey}\n  */\n\n\n  build() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.eddsa25519key_build(this.ptr);\n    return COSEKey.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass HeaderMap {\n  static __wrap(ptr) {\n    const obj = Object.create(HeaderMap.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_headermap_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {HeaderMap}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_from_bytes(ptr0, len0);\n    return HeaderMap.__wrap(ret);\n  }\n  /**\n  * @param {Label} algorithm_id\n  */\n\n\n  set_algorithm_id(algorithm_id) {\n    _assertClass(algorithm_id, Label);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_algorithm_id(this.ptr, algorithm_id.ptr);\n  }\n  /**\n  * @returns {Label | undefined}\n  */\n\n\n  algorithm_id() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_algorithm_id(this.ptr);\n    return ret === 0 ? undefined : Label.__wrap(ret);\n  }\n  /**\n  * @param {Labels} criticality\n  */\n\n\n  set_criticality(criticality) {\n    _assertClass(criticality, Labels);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_criticality(this.ptr, criticality.ptr);\n  }\n  /**\n  * @returns {Labels | undefined}\n  */\n\n\n  criticality() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_criticality(this.ptr);\n    return ret === 0 ? undefined : Labels.__wrap(ret);\n  }\n  /**\n  * @param {Label} content_type\n  */\n\n\n  set_content_type(content_type) {\n    _assertClass(content_type, Label);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_algorithm_id(this.ptr, content_type.ptr);\n  }\n  /**\n  * @returns {Label | undefined}\n  */\n\n\n  content_type() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_algorithm_id(this.ptr);\n    return ret === 0 ? undefined : Label.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} key_id\n  */\n\n\n  set_key_id(key_id) {\n    var ptr0 = passArray8ToWasm0(key_id, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_key_id(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  key_id() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_key_id(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} init_vector\n  */\n\n\n  set_init_vector(init_vector) {\n    var ptr0 = passArray8ToWasm0(init_vector, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_set_base_init_vector(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  init_vector() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.cosekey_base_init_vector(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} partial_init_vector\n  */\n\n\n  set_partial_init_vector(partial_init_vector) {\n    var ptr0 = passArray8ToWasm0(partial_init_vector, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_partial_init_vector(this.ptr, ptr0, len0);\n  }\n  /**\n  * @returns {Uint8Array | undefined}\n  */\n\n\n  partial_init_vector() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_partial_init_vector(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {CounterSignature} counter_signature\n  */\n\n\n  set_counter_signature(counter_signature) {\n    _assertClass(counter_signature, CounterSignature);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_counter_signature(this.ptr, counter_signature.ptr);\n  }\n  /**\n  * @returns {CounterSignature | undefined}\n  */\n\n\n  counter_signature() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_counter_signature(this.ptr);\n    return ret === 0 ? undefined : CounterSignature.__wrap(ret);\n  }\n  /**\n  * @param {Label} label\n  * @returns {CBORValue | undefined}\n  */\n\n\n  header(label) {\n    _assertClass(label, Label);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_header(this.ptr, label.ptr);\n    return ret === 0 ? undefined : CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {Label} label\n  * @param {CBORValue} value\n  */\n\n\n  set_header(label, value) {\n    _assertClass(label, Label);\n\n    _assertClass(value, CBORValue);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_set_header(this.ptr, label.ptr, value.ptr);\n  }\n  /**\n  * @returns {Labels}\n  */\n\n\n  keys() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_keys(this.ptr);\n    return Labels.__wrap(ret);\n  }\n  /**\n  * @returns {HeaderMap}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headermap_new();\n    return HeaderMap.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass Headers {\n  static __wrap(ptr) {\n    const obj = Object.create(Headers.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_headers_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headers_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {Headers}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headers_from_bytes(ptr0, len0);\n    return Headers.__wrap(ret);\n  }\n  /**\n  * @returns {ProtectedHeaderMap}\n  */\n\n\n  protected() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headers_protected(this.ptr);\n    return ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @returns {HeaderMap}\n  */\n\n\n  unprotected() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headers_unprotected(this.ptr);\n    return HeaderMap.__wrap(ret);\n  }\n  /**\n  * @param {ProtectedHeaderMap} protected_\n  * @param {HeaderMap} unprotected_\n  * @returns {Headers}\n  */\n\n\n  static new(protected_, unprotected_) {\n    _assertClass(protected_, ProtectedHeaderMap);\n\n    _assertClass(unprotected_, HeaderMap);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.headers_new(protected_.ptr, unprotected_.ptr);\n    return Headers.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass Int {\n  static __wrap(ptr) {\n    const obj = Object.create(Int.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_int_free(ptr);\n  }\n  /**\n  * @param {BigNum} x\n  * @returns {Int}\n  */\n\n\n  static new(x) {\n    _assertClass(x, BigNum);\n\n    var ptr0 = x.ptr;\n    x.ptr = 0;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_new(ptr0);\n    return Int.__wrap(ret);\n  }\n  /**\n  * @param {BigNum} x\n  * @returns {Int}\n  */\n\n\n  static new_negative(x) {\n    _assertClass(x, BigNum);\n\n    var ptr0 = x.ptr;\n    x.ptr = 0;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_new_negative(ptr0);\n    return Int.__wrap(ret);\n  }\n  /**\n  * @param {number} x\n  * @returns {Int}\n  */\n\n\n  static new_i32(x) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_new_i32(x);\n    return Int.__wrap(ret);\n  }\n  /**\n  * @returns {boolean}\n  */\n\n\n  is_positive() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_is_positive(this.ptr);\n    return ret !== 0;\n  }\n  /**\n  * @returns {BigNum | undefined}\n  */\n\n\n  as_positive() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_as_positive(this.ptr);\n    return ret === 0 ? undefined : BigNum.__wrap(ret);\n  }\n  /**\n  * @returns {BigNum | undefined}\n  */\n\n\n  as_negative() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_as_negative(this.ptr);\n    return ret === 0 ? undefined : BigNum.__wrap(ret);\n  }\n  /**\n  * @returns {number | undefined}\n  */\n\n\n  as_i32() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.int_as_i32(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n\n}\n/**\n*/\n\nclass Label {\n  static __wrap(ptr) {\n    const obj = Object.create(Label.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_label_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {Label}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_bytes(ptr0, len0);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {Int} int\n  * @returns {Label}\n  */\n\n\n  static new_int(int) {\n    _assertClass(int, Int);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_new_int(int.ptr);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {string} text\n  * @returns {Label}\n  */\n\n\n  static new_text(text) {\n    var ptr0 = passStringToWasm0(text, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_new_text(ptr0, len0);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  kind() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_kind(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {Int | undefined}\n  */\n\n\n  as_int() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_as_int(this.ptr);\n    return ret === 0 ? undefined : Int.__wrap(ret);\n  }\n  /**\n  * @returns {string | undefined}\n  */\n\n\n  as_text() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_as_text(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v0;\n\n      if (r0 !== 0) {\n        v0 = getStringFromWasm0(r0, r1).slice();\n\n        _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n      }\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} id\n  * @returns {Label}\n  */\n\n\n  static from_algorithm_id(id) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_algorithm_id(id);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {number} key_type\n  * @returns {Label}\n  */\n\n\n  static from_key_type(key_type) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_key_type(key_type);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {number} ec_key\n  * @returns {Label}\n  */\n\n\n  static from_ec_key(ec_key) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_ec_key(ec_key);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {number} curve_type\n  * @returns {Label}\n  */\n\n\n  static from_curve_type(curve_type) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_curve_type(curve_type);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {number} key_op\n  * @returns {Label}\n  */\n\n\n  static from_key_operation(key_op) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.label_from_key_operation(key_op);\n    return Label.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass Labels {\n  static __wrap(ptr) {\n    const obj = Object.create(Labels.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_labels_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.labels_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {Labels}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.labels_from_bytes(ptr0, len0);\n    return Labels.__wrap(ret);\n  }\n  /**\n  * @returns {Labels}\n  */\n\n\n  static new() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_new();\n    return Labels.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  len() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.coserecipients_len(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} index\n  * @returns {Label}\n  */\n\n\n  get(index) {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.labels_get(this.ptr, index);\n    return Label.__wrap(ret);\n  }\n  /**\n  * @param {Label} elem\n  */\n\n\n  add(elem) {\n    _assertClass(elem, Label);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.labels_add(this.ptr, elem.ptr);\n  }\n\n}\n/**\n*/\n\nclass PasswordEncryption {\n  static __wrap(ptr) {\n    const obj = Object.create(PasswordEncryption.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_passwordencryption_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.passwordencryption_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {PasswordEncryption}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.passwordencryption_from_bytes(ptr0, len0);\n    return PasswordEncryption.__wrap(ret);\n  }\n  /**\n  * @param {COSEEncrypt0} data\n  * @returns {PasswordEncryption}\n  */\n\n\n  static new(data) {\n    _assertClass(data, COSEEncrypt0);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.passwordencryption_new(data.ptr);\n    return PasswordEncryption.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass ProtectedHeaderMap {\n  static __wrap(ptr) {\n    const obj = Object.create(ProtectedHeaderMap.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_protectedheadermap_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.protectedheadermap_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {ProtectedHeaderMap}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.protectedheadermap_from_bytes(ptr0, len0);\n    return ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @returns {ProtectedHeaderMap}\n  */\n\n\n  static new_empty() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.protectedheadermap_new_empty();\n    return ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @param {HeaderMap} header_map\n  * @returns {ProtectedHeaderMap}\n  */\n\n\n  static new(header_map) {\n    _assertClass(header_map, HeaderMap);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.protectedheadermap_new(header_map.ptr);\n    return ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @returns {HeaderMap}\n  */\n\n\n  deserialized_headers() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.protectedheadermap_deserialized_headers(this.ptr);\n    return HeaderMap.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass PubKeyEncryption {\n  static __wrap(ptr) {\n    const obj = Object.create(PubKeyEncryption.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_pubkeyencryption_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.pubkeyencryption_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {PubKeyEncryption}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.pubkeyencryption_from_bytes(ptr0, len0);\n    return PubKeyEncryption.__wrap(ret);\n  }\n  /**\n  * @param {COSEEncrypt} data\n  * @returns {PubKeyEncryption}\n  */\n\n\n  static new(data) {\n    _assertClass(data, COSEEncrypt);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.pubkeyencryption_new(data.ptr);\n    return PubKeyEncryption.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass SigStructure {\n  static __wrap(ptr) {\n    const obj = Object.create(SigStructure.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_sigstructure_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {SigStructure}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_from_bytes(ptr0, len0);\n    return SigStructure.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  context() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_context(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {ProtectedHeaderMap}\n  */\n\n\n  body_protected() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_body_protected(this.ptr);\n    return ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @returns {ProtectedHeaderMap | undefined}\n  */\n\n\n  sign_protected() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_sign_protected(this.ptr);\n    return ret === 0 ? undefined : ProtectedHeaderMap.__wrap(ret);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  external_aad() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_external_aad(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  payload() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_payload(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {ProtectedHeaderMap} sign_protected\n  */\n\n\n  set_sign_protected(sign_protected) {\n    _assertClass(sign_protected, ProtectedHeaderMap);\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_set_sign_protected(this.ptr, sign_protected.ptr);\n  }\n  /**\n  * @param {number} context\n  * @param {ProtectedHeaderMap} body_protected\n  * @param {Uint8Array} external_aad\n  * @param {Uint8Array} payload\n  * @returns {SigStructure}\n  */\n\n\n  static new(context, body_protected, external_aad, payload) {\n    _assertClass(body_protected, ProtectedHeaderMap);\n\n    var ptr0 = passArray8ToWasm0(external_aad, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(payload, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.sigstructure_new(context, body_protected.ptr, ptr0, len0, ptr1, len1);\n    return SigStructure.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass SignedMessage {\n  static __wrap(ptr) {\n    const obj = Object.create(SignedMessage.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_signedmessage_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {SignedMessage}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_from_bytes(ptr0, len0);\n    return SignedMessage.__wrap(ret);\n  }\n  /**\n  * @param {COSESign} cose_sign\n  * @returns {SignedMessage}\n  */\n\n\n  static new_cose_sign(cose_sign) {\n    _assertClass(cose_sign, COSESign);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_new_cose_sign(cose_sign.ptr);\n    return SignedMessage.__wrap(ret);\n  }\n  /**\n  * @param {COSESign1} cose_sign1\n  * @returns {SignedMessage}\n  */\n\n\n  static new_cose_sign1(cose_sign1) {\n    _assertClass(cose_sign1, COSESign1);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_new_cose_sign1(cose_sign1.ptr);\n    return SignedMessage.__wrap(ret);\n  }\n  /**\n  * @param {string} s\n  * @returns {SignedMessage}\n  */\n\n\n  static from_user_facing_encoding(s) {\n    var ptr0 = passStringToWasm0(s, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_from_user_facing_encoding(ptr0, len0);\n    return SignedMessage.__wrap(ret);\n  }\n  /**\n  * @returns {string}\n  */\n\n\n  to_user_facing_encoding() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_to_user_facing_encoding(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n    }\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  kind() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_kind(this.ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {COSESign | undefined}\n  */\n\n\n  as_cose_sign() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_as_cose_sign(this.ptr);\n    return ret === 0 ? undefined : COSESign.__wrap(ret);\n  }\n  /**\n  * @returns {COSESign1 | undefined}\n  */\n\n\n  as_cose_sign1() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.signedmessage_as_cose_sign1(this.ptr);\n    return ret === 0 ? undefined : COSESign1.__wrap(ret);\n  }\n\n}\n/**\n*/\n\nclass TaggedCBOR {\n  static __wrap(ptr) {\n    const obj = Object.create(TaggedCBOR.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n\n    _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_taggedcbor_free(ptr);\n  }\n  /**\n  * @returns {Uint8Array}\n  */\n\n\n  to_bytes() {\n    try {\n      const retptr = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.taggedcbor_to_bytes(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var v0 = getArrayU8FromWasm0(r0, r1).slice();\n\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n\n      return v0;\n    } finally {\n      _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {TaggedCBOR}\n  */\n\n\n  static from_bytes(bytes) {\n    var ptr0 = passArray8ToWasm0(bytes, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.taggedcbor_from_bytes(ptr0, len0);\n    return TaggedCBOR.__wrap(ret);\n  }\n  /**\n  * @returns {BigNum}\n  */\n\n\n  tag() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.taggedcbor_tag(this.ptr);\n    return BigNum.__wrap(ret);\n  }\n  /**\n  * @returns {CBORValue}\n  */\n\n\n  value() {\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.taggedcbor_value(this.ptr);\n    return CBORValue.__wrap(ret);\n  }\n  /**\n  * @param {BigNum} tag\n  * @param {CBORValue} value\n  * @returns {TaggedCBOR}\n  */\n\n\n  static new(tag, value) {\n    _assertClass(tag, BigNum);\n\n    var ptr0 = tag.ptr;\n    tag.ptr = 0;\n\n    _assertClass(value, CBORValue);\n\n    var ret = _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.taggedcbor_new(ptr0, value.ptr);\n    return TaggedCBOR.__wrap(ret);\n  }\n\n}\nfunction __wbindgen_object_drop_ref(arg0) {\n  takeObject(arg0);\n}\n;\nfunction __wbindgen_string_new(arg0, arg1) {\n  var ret = getStringFromWasm0(arg0, arg1);\n  return addHeapObject(ret);\n}\n;\nfunction __wbindgen_debug_string(arg0, arg1) {\n  var ret = debugString(getObject(arg1));\n  var ptr0 = passStringToWasm0(ret, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _emurgo_message_signing_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  getInt32Memory0()[arg0 / 4 + 1] = len0;\n  getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nfunction __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n}\n;\nfunction __wbindgen_rethrow(arg0) {\n  throw takeObject(arg0);\n}\n;\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://my-webpack-project/./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.js?");

/***/ }),

/***/ "./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.wasm":
/*!******************************************************************************************************************!*\
  !*** ./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.wasm ***!
  \******************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __webpack_instantiate__ = ([WEBPACK_IMPORTED_MODULE_0]) => {\n\treturn __webpack_require__.v(exports, module.id, \"af87c9a7a1568f2b0870\", {\n\t\t\"./emurgo_message_signing_bg.js\": {\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\t\"__wbindgen_rethrow\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_rethrow\n\t\t}\n\t});\n}\n__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => {\n\ttry {\n\t/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./emurgo_message_signing_bg.js */ \"./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.js\");\n\tvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([WEBPACK_IMPORTED_MODULE_0]);\n\tvar [WEBPACK_IMPORTED_MODULE_0] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__;\n\tawait __webpack_require__.v(exports, module.id, \"af87c9a7a1568f2b0870\", {\n\t\t\"./emurgo_message_signing_bg.js\": {\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\t\"__wbindgen_rethrow\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_rethrow\n\t\t}\n\t});\n\t__webpack_async_result__();\n\t} catch(e) { __webpack_async_result__(e); }\n}, 1);\n\n//# sourceURL=webpack://my-webpack-project/./lib/nami-wallet/temporary_modules/@emurgo/cardano-message-signing-browser/emurgo_message_signing_bg.wasm?");

/***/ })

}]);