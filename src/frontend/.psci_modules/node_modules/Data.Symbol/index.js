"use strict";
var $foreign = require("./foreign.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var reifySymbol = function (s) {
    return function (f) {
        return $foreign.unsafeCoerce(function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(Type_Proxy["Proxy"].value);
    };
};

// Note: Before v0.14.0, we did not have polykinds. Thus, we needed
// kind-specific proxy types to pass a Symbol around.
// Once v0.14.0 was released, we could use the kind-generic `Proxy` type
// instead. However, to reduce code breakage, we're using
// `forall proxy. proxy sym` here so that `SProxy` code will still compile.
// When PureScript makes a new breaking release after the v0.14.0 release,
// this type signature will be updated to `Proxy sym -> String`.
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
module.exports = {
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy
};
